$custom-colors: (
  "red": ($red, $red-invert),
  "rusted": ($rusted, $rusted-invert),
  "orange": ($orange, $orange-invert),
  "purple": ($purple, $purple-invert),
  "yellow": ($yellow, $yellow-invert),
  "turquoise": ($turquoise, $turquoise-invert),
  "green": ($green, $green-invert),
  "blue": ($blue, $blue-invert),
  "cyan": ($cyan, $cyan-invert),
  "navy": ($navy, $navy-invert)
);

$colors: mergeColorMaps(("white": ($white, $black), "black": ($black, $white), "light": ($light, $light-invert), "dark": ($dark, $dark-invert), "primary": ($primary, $primary-invert), "link": ($link, $link-invert), "info": ($info, $info-invert), "success": ($success, $success-invert), "warning": ($warning, $warning-invert), "danger": ($danger, $danger-invert)), $custom-colors);
// $colors: map-merge($colors, $customcolors);
// Overrides
@import url(https://fonts.googleapis.com/css?family=Saira+Condensed:300,600|Saira:300,600&subset=latin-ext,vietnamese);
.button,
.control.has-icons-left .icon,
.control.has-icons-right .icon,
.input,
.pagination-ellipsis,
.pagination-link,
.pagination-next,
.pagination-previous,
.select,
.select select,
.textarea {
    height: 2.6667rem;
}

// Add a serif family
$font-primary: 'Saira', Arial, sans-serif;
$font-condensed: 'Saira Condensed', 'Arial Narrow', sans-serif;

$family-primary: $font-primary;

.is-relative {
  position: relative;
}
.is-absolute{
  z-index: 100;
  position: absolute;
  left: 50%;
  transform: translate(-50%, 0);
}

.is-condensed {
  font-family: $font-condensed;
}
.is-centered{
  display: block;
  margin: 0 auto;
}
.is-rounded{
  border-radius: .5rem;
}
.card.is-rounded img{
  border-radius: .5rem .5rem 0 0;
}

.hero.has-background-grey-lighter{
  background: hsl(0, 0%, 86%);
}

.container.no-margin{
  margin-left: 0;
  margin-right: 0;
}

.button {
    &.is-active,
    &.is-focused,
    &:active,
    &:focus {
        box-shadow: inset 1px 1px 4px rgba($grey-darker, 0.3);
    }
    @each $name,
    $pair in $colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);
        &.is-#{$name} {
            &.is-hovered,
            &:hover {
                background-color: darken($color, 10);
            }
            &.is-active,
            &.is-focused,
            &:active,
            &:focus {
                box-shadow: inset 1px 0 3px rgba($grey-darker, 0.3);
                background-color: darken($color, 10);
            }
        }
    }
}

.input,
.textarea {
    box-shadow: none;
}

.box,
.card {
    box-shadow: 0 0 0 1px $border;
}

.notification {
    @each $name,
    $pair in $colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);
        &.is-#{$name} {
            a:not(.button) {
                color: $color-invert;
                text-decoration: underline;
            }
        }
    }
}

.progress {
    height: $size-small;
}

.progress,
.tag {
    border-radius: $radius;
}



.hero {
    // Colors
    .navbar:not(.is-transparent) {
        background-color: $black-ter;
    }
    @each $name,
    $pair in $colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);
        &.is-#{$name} {
            .navbar {
                background: none;
            }
            .navbar-item,
            .navbar-link {
                color: $color-invert;
                &.is-active,
                &:hover {
                    background-color: darken($color, 10);
                    color: $color-invert;
                }
                &:after {
                    border-color: $color-invert;
                }
            }
            .navbar-menu {
                background-color: $color;
            }
            .navbar-burger {
                span {
                    background-color: $color-invert;
                }
            }
            @include desktop {
                .navbar-dropdown a.navbar-item {
                    color: $grey-dark;
                }
            }
        }
    }
}

.columns .column{
  &.is-blue{
    background-color: $blue;
    .menu-list {
      a {
        background-color: $blue;
        color: $white-ter;
      }

      a:hover{
        background-color: $blue;
        color: $white;
        text-decoration: underline;
      }
    }
    .menu-label{
      color: $white-ter;
    }
  }
  &.is-navy{
    background-color: $navy;
    .menu-list {
      a {
        background-color: $navy;
        color: $white-ter;
      }
      a:hover{
        background-color: $navy;
        color: $white;
        text-decoration: underline;
      }
      a.is-active {
        color: $cyan;
      }
    }
    .menu-label{
      color: $white-ter;
    }
  }
  &.is-light{
    background-color: $light;
  }
}

.up-7{
  top: -7rem;
}
.down-1{
  bottom: 1rem;
}

.timeline-content ul{
  margin-top: 0;
}

.timeline-content p:not(:last-child){
  margin-bottom: 0.5rem;
}

.timeline .timeline-item .timeline-marker.is-icon > i.fa, .timeline .timeline-item .timeline-marker.is-icon > i.fas {
  font-size: 0.75rem !important;
}

.timeline .timeline-item .timeline-marker.is-success.is-icon > i.fa {
    color: rgba(255, 255, 255, 1) !important;
}


.avatar {
    float: left;
    border-radius: 50%;
    text-align: center;
    cursor: context-menu;
    &.is-16x16{
        line-height: 16px;
    }
    &.is-32x32{
        line-height: 32px;
    }
    &.is-96x96{
        line-height: 96px;
    }
    &.is-blue{
        background-color: $blue;
    }
    &.is-red{
        background-color: $red;
    }
    &.is-green{
        background-color: $green;
    }
    &.is-centered{
        float: none;
        display: block;
        margin: 0 auto;
    }
}

.avatar-wrapper{
    line-height: 32px;
    cursor: context-menu;
}
