version: "3"

services:
  minio:
    image: minio/minio:RELEASE.2019-05-23T00-29-34Z
    volumes:
      - 'C:\superalgos:/data'
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data
    networks:
      - superalgos_net

  postgres:
    image: postgres:11-alpine
    restart: always
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma
      POSTGRES_DB: prisma
    volumes:
      - postgresdb_data:/var/lib/postgresql/data-teams
    networks:
      - superalgos_net

  prisma:
    image: prismagraphql/prisma:1.27
    restart: always
    environment:
      PRISMA_CONFIG: |
        port: 4466
        # uncomment the next line and provide the env var PRISMA_MANAGEMENT_API_SECRET=my-secret to activate cluster security
        managementApiSecret: prisma_secret
        databases:
          default:
            connector: postgres
            host: postgres
            port: 5432
            user: prisma
            password: prisma
            migrations: true
    ports:
      - "4466:4466"
    volumes:
      - postgresdb_data:/data/db
    networks:
      - superalgos_net
    depends_on:
      - postgres

  teams-prisma:
    image: superalgos/teams-prisma:0.1.0
    restart: "no"
    env_file: ./env/teams-prisma.env
    command: ["./wait-for-it.sh", "prisma:4466", "--", "prisma", "deploy"]
    networks:
      - superalgos_net
    depends_on:
      - prisma

  mongo:
    image: mongo:4.0.9
    restart: always
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - superalgos_net

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    networks:
      - superalgos_net
    depends_on:
      - mongo

  saweb-api:
    image: superalgos/saweb-api:0.1.0
    restart: always
    env_file: ./env/saweb-api.env
    command: node .
    ports:
      - "4004:4004"
    networks:
      - superalgos_net
    depends_on:
      - mongo-express

  logs-api:
    image: superalgos/logs-api:0.1.0
    restart: always
    env_file: ./env/logs-api.env
    command: npm start
    networks:
      - superalgos_net
    depends_on:
      - mongo-express

  clones-api:
    image: superalgos/clones-api:0.1.0
    restart: always
    env_file: ./env/clones-api.env
    command: npm start
    networks:
      - superalgos_net
    depends_on:
      - mongo-express

  cockpit-api:
    image: superalgos/cockpit-api:0.1.0
    restart: always
    env_file: ./env/cockpit-api.env
    command: npm start
    networks:
      - superalgos_net
    depends_on:
      - mongo-express

  strategizer-api:
    image: superalgos/strategizer-api:0.1.0
    restart: always
    env_file: ./env/strategizer-api.env
    command: node .
    networks:
      - superalgos_net
    depends_on:
      - mongo-express

  events-api:
    image: superalgos/events-api:0.1.0
    restart: always
    env_file: ./env/events-api.env
    command: npm start
    networks:
      - superalgos_net
    depends_on:
      - mongo-express

  users-api:
    image: superalgos/users-api:0.1.0
    restart: always
    env_file: ./env/users-api.env
    command: node .
    ports:
      - "4000:4000"
    networks:
      - superalgos_net
    depends_on:
      - mongo-express

  keyvault-api:
    image: superalgos/keyvault-api:0.1.0
    restart: always
    env_file: ./env/keyvault-api.env
    command: npm start
    networks:
      - superalgos_net
    depends_on:
      - mongo-express

  teams-api:
    image: superalgos/teams-api:0.1.0
    restart: always
    env_file: ./env/teams-api.env
    command: npm start
    ports:
      - "4001:4001"
    networks:
      - superalgos_net
    depends_on:
      - prisma

  notifications-api:
    image: superalgos/notifications-api:0.1.0
    restart: always
    env_file: ./env/notifications-api.env
    command: npm start
    networks:
      - superalgos_net
    depends_on:
      - prisma

  master-app:
    image: superalgos/master-app:0.1.0
    restart: always
    env_file: ./env/master-app.env
    command: ["nginx"]
    ports:
      - "3100:3100"
    networks:
      - superalgos_net
    depends_on:
      - keyvault-api
      - clones-api
      - users-api
      - events-api
      - strategizer-api
      - logs-api
      - cockpit-api
      - teams-api
      - notifications-api
      - saweb-api

  master-app-api:
    image: superalgos/master-app-api:0.1.0
    restart: always
    env_file: ./env/master-app-api.env
    command: node .
    ports:
      - "4100:4100"
    networks:
      - superalgos_net
    depends_on:
      - master-app

  aaweb:
    image: superalgos/aaweb:0.1.0
    restart: always
    env_file: ./env/aaweb.env
    command: node server
    ports:
      - "4101:4101"
    networks:
      - superalgos_net
    depends_on:
      - master-app-api

  kubernetes:
    image: qoomon/docker-host:2.2.0
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: on-failure
    networks:
      - superalgos_net

networks:
  superalgos_net:

volumes:
  mongodb_data:
  postgresdb_data:
